# -*- coding: utf-8 -*-
"""
Created on Sun Apr 09 16:28:01 2017

@author: chenym

These functions perform anatomical preprocessing, which is mostly skull 
stripping. Since skull stripping is done in Brainsuite, we don't have to do
much in Python. 
"""

from nipy import load_image, save_image
from shutil import copyfile
from utils import flip_x_axis, brain_image_path

def skullstrip(anat_skullstripped, anat_dir='anat/', **kwargs):
    """
    This is where skull stripping functions are supposed to go. However, since 
    we leave skull stripping to Brainsuite (and done in their GUI), the only 
    we should do here is to check if anat_skullstripped file, generated by
    Brainsuite, can be found in anat_dir directory. 
    """
    raw_input('make sure your skull stripped anatomical scan is placed in %s, ' % anat_dir + 
    'and is named as %s.nii.gz' % anat_skullstripped)
    return brain_image_path(anat_dir, anat_skullstripped)

def post_skullstrip(anat_skullstripped, anat_out, 
                    anat_dir='anat/', flip_x=True, 
                    **kwargs): 
    """
    Here we assume the input file is skull stripped already, and therefore
    this function wouldn't do much except maybe flipping the orientation of 
    the scan. 
    
    args:
        anat_skullstripped: name of the anatomical scan file. This file is 
        assumed to be already skull stripped. 
        flip_x: whether to flip the x axis of the input scan. See: utils.flip_x_axis
        anat_out: the name of the output file, with extension. 
        anat_dir: current working directory
    """ 
    in_file = brain_image_path(anat_dir, anat_skullstripped)
    out_file = brain_image_path(anat_dir, anat_out, verify=False)
    
    if not flip_x:
        if in_file == out_file:
            return # nothing to do here
        # else if (not flip_x and anat != anat_out), copy the input file        
        copyfile(in_file, out_file)
        return
    # else, we need to re-orientate
    I = load_image(in_file)
    I_new = flip_x_axis(I)
    save_image(I_new, out_file) # maybe use nibabel later?
